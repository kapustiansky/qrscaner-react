{"version":3,"sources":["components/login.js","components/result.js","components/scan.js","components/localstor-item.js","index.js"],"names":["LoginPage","state","login","password","onSubmit","e","baseEncode","base64","encode","localStorage","setItem","setState","onLoginChange","target","value","onPasswordChange","this","props","item","to","className","type","required","onChange","placeholder","Component","Result","href","ScanPage","result","handleScan","data","handleError","err","console","error","delay","resolution","onError","onScan","style","margin","width","LocalStor","jwt","getItem","App","basename","path","component","ReactDOM","render","document","getElementById"],"mappings":"yRAqFeA,G,kNA7EXC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGVC,SAAW,SAACC,GACV,IAAMC,EAAaC,IAAOC,OAAO,EAAKP,MAAMC,MAAQ,IAAM,EAAKD,MAAME,UACrEM,aAAaC,QAAQ,MAAOJ,GAI3B,IAKD,EAAKK,SAAS,CACZT,MAAO,KAET,EAAKS,SAAS,CACZR,SAAU,M,EAIdS,cAAgB,SAACP,GACf,EAAKM,SAAS,CACZT,MAAOG,EAAEQ,OAAOC,S,EAIpBC,iBAAmB,SAACV,GAClB,EAAKM,SAAS,CACZR,SAAUE,EAAEQ,OAAOC,S,uDAMrB,OAAwB,IAApBE,KAAKC,MAAMC,KACA,cAAC,IAAD,CAAUC,GAAG,UAIjC,qBAAKC,UAAU,eAAf,SACC,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,mBAAf,SACC,qBAAKA,UAAU,OAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAMA,UAAU,cAAchB,SAAUY,KAAKZ,SAA7C,UACC,oBAAIgB,UAAU,wDAAd,oBAC2B,uBAAOC,KAAK,OACNC,UAAQ,EACPF,UAAU,oBACVG,SAAUP,KAAKJ,cACfY,YAAY,QACZV,MAAOE,KAAKf,MAAMC,QAEzB,uBAAOmB,KAAK,WACJC,UAAQ,EACRC,SAAUP,KAAKD,iBACfK,UAAU,eACVI,YAAY,WACZV,MAAOE,KAAKf,MAAME,WACrD,qBAAKiB,UAAU,cAAf,SACC,wBAAQC,KAAK,SACZD,UAAU,+CADX,uC,GAlEcK,c,iBCUTC,G,6KATP,OACI,sBAAKN,UAAU,iBAAf,UACI,iDACA,mBAAGO,KAAMX,KAAKC,MAAMC,KAAML,OAAO,SAAjC,SAA2CG,KAAKC,MAAMC,c,GANjDO,cCsDNG,G,kNAlDX3B,MAAQ,CACH4B,OAAQ,M,EAGVC,WAAa,SAAAC,GACPA,GACF,EAAKpB,SAAS,CACZkB,OAAQE,K,EAIdC,YAAc,SAAAC,GACZC,QAAQC,MAAMF,I,uDAIf,IAAwB,IAApBjB,KAAKC,MAAMC,KACX,OAAO,cAAC,IAAD,CAAUC,GAAG,WAGxB,GAA0B,OAAtBH,KAAKf,MAAM4B,OACX,OACI,sBAAKT,UAAU,mBAAf,UACI,cAAC,IAAD,CAAUD,GAAE,sBAAiBH,KAAKf,MAAM4B,OAA5B,QACZ,cAAC,EAAD,CAAQX,KAAOF,KAAKf,MAAM4B,YAUrC,OACE,qBAAKT,UAAU,cAAf,SACE,cAAC,IAAD,CACEgB,MAAO,IACPC,WAAY,KACZC,QAAStB,KAAKgB,YACdO,OAAQvB,KAAKc,WACbU,MAZe,CAChBC,OAAQ,aACRC,MAAO,KAWNtB,UAAW,uB,GA3CHK,cCWRkB,EAbG,WAEd,IACIC,IADQnC,aAAaoC,QAAQ,OAGjC,OACI,gCACI,cAAC,EAAD,CAAW3B,KAAO0B,IAClB,cAAC,EAAD,CAAU1B,KAAO0B,QCFvBE,G,MAAM,WAEZ,OACC,cAAC,IAAD,CAASC,SAAS,mBAAlB,SACA,yBAAS3B,UAAU,qEAAnB,SACE,cAAC,IAAD,CAAO4B,KAAK,IAAIC,UAAWN,UAS9BO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e0d7b0a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport base64 from 'react-native-base64';\r\n\r\nimport './login.css';\r\n\r\nclass LoginPage extends Component  {\r\n\r\n    state = {\r\n      login: '',\r\n      password: ''\r\n    };\r\n\r\n      onSubmit = (e) => {\r\n        const baseEncode = base64.encode(this.state.login + ':' + this.state.password);\r\n        localStorage.setItem('jwt', baseEncode);\r\n\r\n\r\n\r\n        <Redirect to=\"/scan\" />\r\n        \r\n\r\n\r\n        //e.preventDefault();\r\n        this.setState({\r\n          login: ''\r\n        });\r\n        this.setState({\r\n          password: ''\r\n        });\r\n      };\r\n    \r\n      onLoginChange = (e) => {\r\n        this.setState({\r\n          login: e.target.value\r\n        });\r\n      };\r\n\r\n      onPasswordChange = (e) => {\r\n        this.setState({\r\n          password: e.target.value\r\n        });\r\n      };\r\n    \r\n      render() {\r\n\r\n        if (this.props.item === true) {\r\n                return <Redirect to=\"/scan\" />;\r\n            }\r\n\r\n        return (\r\n\t\t\t<div className=\"my-5 mx-md-5\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-6 mx-auto\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<form className=\"text-center\" onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t\t\t\t<h3 className=\"font-weight-bold my-4 pb-2 text-center dark-grey-text\">Log In</h3>\r\n                                    <input type=\"text\"\r\n                                          required\r\n                                           className=\"form-control mb-4\"\r\n                                           onChange={this.onLoginChange}\r\n                                           placeholder=\"Login\"\r\n                                           value={this.state.login} />\r\n\r\n                                    <input type=\"password\"\r\n                                            required\r\n                                            onChange={this.onPasswordChange}\r\n                                            className=\"form-control\" \r\n                                            placeholder=\"Password\"\r\n                                            value={this.state.password} />\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<button type=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn castom-btn btn-rounded my-4 waves-effect\">Submit</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default LoginPage;","import React, { Component } from 'react';\r\n\r\nimport './result.css';\r\n\r\nclass Result extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"link-container\">\r\n                <strong>You Result:</strong>\r\n                <a href={this.props.item} target=\"_blank\">{this.props.item}</a>\r\n            </div>           \r\n            )\r\n    }\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\r\nimport QrReader from 'react-qr-reader';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Result from './result';\r\nimport './scan.css';\r\n\r\nclass ScanPage extends Component {\r\n    state = {\r\n         result: null\r\n       }\r\n      \r\n       handleScan = data => {\r\n         if (data) {\r\n           this.setState({\r\n             result: data\r\n           })\r\n         }\r\n       }\r\n       handleError = err => {\r\n         console.error(err)\r\n       }\r\n       render() {\r\n\r\n        if (this.props.item === false) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n\r\n        if (this.state.result !== null) {\r\n            return (\r\n                <div className=\"container-result\">\r\n                    <Redirect to={`/result?r={{${this.state.result}}}`} />\r\n                    <Result item={ this.state.result } />\r\n                </div>\r\n            )\r\n        }\r\n\r\n         const previewStyle = {\r\n              margin: '0 0 1rem 0',\r\n              width: 320,\r\n            }\r\n\r\n         return (\r\n           <div className=\"scaner-cont\">\r\n             <QrReader\r\n               delay={200}\r\n               resolution={1200}\r\n               onError={this.handleError}\r\n               onScan={this.handleScan}\r\n               style={previewStyle}\r\n               className={'qr-conteiner'}\r\n             />\r\n             {/* <p>{this.state.result}</p> */}\r\n           </div>\r\n         )\r\n       }\r\n     }\r\n\r\nexport default ScanPage;","import React from 'react';\r\n\r\nimport LoginPage from './login';\r\nimport ScanPage from './scan';\r\n\r\nconst LocalStor = () => {\r\n\r\n    const JWT = localStorage.getItem('jwt');\r\n    let jwt = JWT ? true : false;\r\n\r\n    return (\r\n        <div>\r\n            <LoginPage item={ jwt }/>\r\n            <ScanPage item={ jwt }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocalStor;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport LocalStor from './components/localstor-item';\n// import LoginPage from './components/login';\n// import Result from './components/result';\n// import ScanPage from './components/scan';\n\nimport './index.css';\n\nconst App = () => {\n\nreturn\t(\n\t<Router  basename=\"/qrscaner-react/\">\n\t<section className=\"container my-5 px-0 z-depth-1 p-5 my-md-5 text-center main-section\">\n\t\t\t<Route path=\"/\" component={LocalStor} />\n\t\t\t{/* <Route path=\"/login\" component={LoginPage} />\n\t\t\t<Route path=\"/result\" component={Result} />\n\t\t\t<Route path=\"/scan\" component={ScanPage} /> */}\n\t</section>\n\t</Router>\n\t);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}